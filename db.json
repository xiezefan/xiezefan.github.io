{"Asset":[{"_id":"themes/yilia/source/img/coderwall.png","path":"img/coderwall.png","modified":false},{"_id":"themes/yilia/source/img/delicious.png","path":"img/delicious.png","modified":false},{"_id":"themes/yilia/source/img/facebook.png","path":"img/facebook.png","modified":false},{"_id":"themes/yilia/source/img/github.png","path":"img/github.png","modified":false},{"_id":"themes/yilia/source/img/google.png","path":"img/google.png","modified":false},{"_id":"themes/yilia/source/img/img-err.png","path":"img/img-err.png","modified":false},{"_id":"themes/yilia/source/img/img-loading.png","path":"img/img-loading.png","modified":false},{"_id":"themes/yilia/source/img/linkedin.png","path":"img/linkedin.png","modified":false},{"_id":"themes/yilia/source/img/pinboard.png","path":"img/pinboard.png","modified":false},{"_id":"themes/yilia/source/img/pinterest.png","path":"img/pinterest.png","modified":false},{"_id":"themes/yilia/source/img/rss.png","path":"img/rss.png","modified":false},{"_id":"themes/yilia/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":false},{"_id":"themes/yilia/source/img/twitter.png","path":"img/twitter.png","modified":false},{"_id":"themes/yilia/source/img/weibo.png","path":"img/weibo.png","modified":false},{"_id":"themes/yilia/source/js/instagram.js","path":"js/instagram.js","modified":false},{"_id":"themes/yilia/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":false},{"_id":"themes/yilia/source/js/main.js","path":"js/main.js","modified":false},{"_id":"themes/yilia/source/js/script.js","path":"js/script.js","modified":false},{"_id":"themes/yilia/source/css/style.styl","path":"css/style.styl","modified":false},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":false},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":false},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","path":"css/fonts/fontawesome-webfont.svgz","modified":false},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":false},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":false},{"_id":"themes/yilia/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":false},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":false},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":false},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":false},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":false},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":false},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":false},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":false},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":false},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":false},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":false},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":false},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":false},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":false},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":false},{"_id":"themes\\yilia\\source\\img\\coderwall.png","path":"img/coderwall.png","modified":false},{"_id":"themes\\yilia\\source\\img\\delicious.png","path":"img/delicious.png","modified":false},{"_id":"themes\\yilia\\source\\img\\facebook.png","path":"img/facebook.png","modified":false},{"_id":"themes\\yilia\\source\\img\\github.png","path":"img/github.png","modified":false},{"_id":"themes\\yilia\\source\\img\\google.png","path":"img/google.png","modified":false},{"_id":"themes\\yilia\\source\\img\\img-err.png","path":"img/img-err.png","modified":false},{"_id":"themes\\yilia\\source\\img\\img-loading.png","path":"img/img-loading.png","modified":false},{"_id":"themes\\yilia\\source\\img\\linkedin.png","path":"img/linkedin.png","modified":false},{"_id":"themes\\yilia\\source\\img\\pinboard.png","path":"img/pinboard.png","modified":false},{"_id":"themes\\yilia\\source\\img\\pinterest.png","path":"img/pinterest.png","modified":false},{"_id":"themes\\yilia\\source\\img\\rss.png","path":"img/rss.png","modified":false},{"_id":"themes\\yilia\\source\\img\\twitter.png","path":"img/twitter.png","modified":false},{"_id":"themes\\yilia\\source\\img\\stackoverflow.png","path":"img/stackoverflow.png","modified":false},{"_id":"themes\\yilia\\source\\img\\weibo.png","path":"img/weibo.png","modified":false},{"_id":"themes\\yilia\\source\\js\\instagram.js","path":"js/instagram.js","modified":false},{"_id":"themes\\yilia\\source\\js\\jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":false},{"_id":"themes\\yilia\\source\\js\\main.js","path":"js/main.js","modified":false},{"_id":"themes\\yilia\\source\\js\\script.js","path":"js/script.js","modified":false},{"_id":"themes\\yilia\\source\\css\\style.styl","path":"css/style.styl","modified":false},{"_id":"themes\\yilia\\source\\css\\fonts\\fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":false},{"_id":"themes\\yilia\\source\\css\\fonts\\fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":false},{"_id":"themes\\yilia\\source\\css\\fonts\\fontawesome-webfont.svgz","path":"css/fonts/fontawesome-webfont.svgz","modified":false},{"_id":"themes\\yilia\\source\\css\\fonts\\fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":false},{"_id":"themes\\yilia\\source\\css\\fonts\\fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":false},{"_id":"themes\\yilia\\source\\fancybox\\blank.gif","path":"fancybox/blank.gif","modified":false},{"_id":"themes\\yilia\\source\\fancybox\\fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":false},{"_id":"themes\\yilia\\source\\fancybox\\fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":false},{"_id":"themes\\yilia\\source\\fancybox\\fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":false},{"_id":"themes\\yilia\\source\\fancybox\\fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":false},{"_id":"themes\\yilia\\source\\fancybox\\fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":false},{"_id":"themes\\yilia\\source\\fancybox\\jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":false},{"_id":"themes\\yilia\\source\\fancybox\\jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":false},{"_id":"themes\\yilia\\source\\fancybox\\jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":false},{"_id":"themes\\yilia\\source\\fancybox\\helpers\\fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":false},{"_id":"themes\\yilia\\source\\fancybox\\helpers\\jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":false},{"_id":"themes\\yilia\\source\\fancybox\\helpers\\jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":false},{"_id":"themes\\yilia\\source\\fancybox\\helpers\\jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":false},{"_id":"themes\\yilia\\source\\fancybox\\helpers\\jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":false},{"_id":"themes\\yilia\\source\\fancybox\\helpers\\jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":false}],"Cache":[{"_id":"scaffolds/draft.md","mtime":1412316005000},{"_id":"scaffolds/page.md","mtime":1412316005000},{"_id":"scaffolds/photo.md","mtime":1412316005000},{"_id":"scaffolds/post.md","mtime":1412316005000},{"_id":"source/_posts/2014-05-13-maven-start.md","mtime":1412316005000},{"_id":"source/_posts/2014-05-19-HashMap-HashTable-diff.md","mtime":1412316005000},{"_id":"source/_posts/2014-05-19-String-StringBuffer-StringBuilder-diff.md","mtime":1412394113000},{"_id":"source/_posts/2014-05-19-final-finally-finalize-diff.md","mtime":1412393898000},{"_id":"source/_posts/2014-05-19-finally-lose.md","mtime":1412316005000},{"_id":"source/_posts/2014-05-19-java-constructor-base.md","mtime":1412394125000},{"_id":"source/_posts/2014-05-19-sleep-wait-diff.md","mtime":1412316005000},{"_id":"themes/yilia/README.md","mtime":1412316005000},{"_id":"themes/yilia/_config.yml","mtime":1412437831000},{"_id":"themes/yilia/package.json","mtime":1412316005000},{"_id":"themes/yilia/scripts/fancybox.js","mtime":1412316005000},{"_id":"themes/yilia/layout/archive.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/category.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/index.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/layout.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/page.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/post.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/tag.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/_partial/archive.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/_partial/article.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/_partial/footer.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/_partial/head.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/_partial/header.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/_partial/post/share.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","mtime":1412316005000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","mtime":1412316005000},{"_id":"themes/yilia/source/img/coderwall.png","mtime":1412316005000},{"_id":"themes/yilia/source/img/delicious.png","mtime":1412316005000},{"_id":"themes/yilia/source/img/facebook.png","mtime":1412316005000},{"_id":"themes/yilia/source/img/github.png","mtime":1412316005000},{"_id":"themes/yilia/source/img/google.png","mtime":1412316005000},{"_id":"themes/yilia/source/img/img-err.png","mtime":1412316005000},{"_id":"themes/yilia/source/img/img-loading.png","mtime":1412316005000},{"_id":"themes/yilia/source/img/linkedin.png","mtime":1412316005000},{"_id":"themes/yilia/source/img/pinboard.png","mtime":1412316005000},{"_id":"themes/yilia/source/img/pinterest.png","mtime":1412316005000},{"_id":"themes/yilia/source/img/rss.png","mtime":1412316005000},{"_id":"themes/yilia/source/img/stackoverflow.png","mtime":1412316005000},{"_id":"themes/yilia/source/img/twitter.png","mtime":1412316005000},{"_id":"themes/yilia/source/img/weibo.png","mtime":1412316005000},{"_id":"themes/yilia/source/js/instagram.js","mtime":1412316005000},{"_id":"themes/yilia/source/js/jquery.lazyload.js","mtime":1412316005000},{"_id":"themes/yilia/source/js/main.js","mtime":1412316005000},{"_id":"themes/yilia/source/js/script.js","mtime":1412316005000},{"_id":"themes/yilia/source/css/_extend.styl","mtime":1412316005000},{"_id":"themes/yilia/source/css/_variables.styl","mtime":1412316005000},{"_id":"themes/yilia/source/css/style.styl","mtime":1412316005000},{"_id":"themes/yilia/source/css/_partial/archive.styl","mtime":1412316005000},{"_id":"themes/yilia/source/css/_partial/article.styl","mtime":1412316005000},{"_id":"themes/yilia/source/css/_partial/footer.styl","mtime":1412316005000},{"_id":"themes/yilia/source/css/_partial/header.styl","mtime":1412316005000},{"_id":"themes/yilia/source/css/_partial/highlight.styl","mtime":1412316005000},{"_id":"themes/yilia/source/css/_partial/instagram.styl","mtime":1412316005000},{"_id":"themes/yilia/source/css/_partial/main.styl","mtime":1412316005000},{"_id":"themes/yilia/source/css/_partial/mobile.styl","mtime":1412316005000},{"_id":"themes/yilia/source/css/_partial/page.styl","mtime":1412316005000},{"_id":"themes/yilia/source/css/_partial/share.styl","mtime":1412316005000},{"_id":"themes/yilia/source/css/_partial/tagcloud.styl","mtime":1412316005000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","mtime":1412316005000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","mtime":1412316005000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","mtime":1412316005000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","mtime":1412316005000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","mtime":1412316005000},{"_id":"themes/yilia/source/css/_util/grid.styl","mtime":1412316005000},{"_id":"themes/yilia/source/css/_util/mixin.styl","mtime":1412316005000},{"_id":"themes/yilia/source/fancybox/blank.gif","mtime":1412316005000},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","mtime":1412316005000},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","mtime":1412316005000},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","mtime":1412316005000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","mtime":1412316005000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","mtime":1412316005000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","mtime":1412316005000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","mtime":1412316005000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","mtime":1412316005000},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","mtime":1412316005000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","mtime":1412316005000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","mtime":1412316005000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","mtime":1412316005000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","mtime":1412316005000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","mtime":1412316005000},{"_id":"themes/yilia/_config.yml~","mtime":1412437831000},{"_id":"scaffolds\\draft.md","mtime":1412439913000},{"_id":"scaffolds\\page.md","mtime":1412439913000},{"_id":"scaffolds\\photo.md","mtime":1412439913000},{"_id":"scaffolds\\post.md","mtime":1412439913000},{"_id":"source\\_posts\\2014-05-13-maven-start.md","mtime":1412441262000},{"_id":"source\\_posts\\2014-05-19-HashMap-HashTable-diff.md","mtime":1412439913000},{"_id":"source\\_posts\\2014-05-19-String-StringBuffer-StringBuilder-diff.md","mtime":1412439913000},{"_id":"source\\_posts\\2014-05-19-final-finally-finalize-diff.md","mtime":1412439913000},{"_id":"source\\_posts\\2014-05-19-finally-lose.md","mtime":1412439913000},{"_id":"source\\_posts\\2014-05-19-java-constructor-base.md","mtime":1412439913000},{"_id":"source\\_posts\\2014-05-19-sleep-wait-diff.md","mtime":1412439913000},{"_id":"source\\_posts\\2014-10-05-tip-git.md","mtime":1412441738000},{"_id":"themes\\yilia\\README.md","mtime":1412439913000},{"_id":"themes\\yilia\\package.json","mtime":1412439913000},{"_id":"themes\\yilia\\_config.yml","mtime":1412441280000},{"_id":"themes\\yilia\\scripts\\fancybox.js","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\archive.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\category.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\index.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\layout.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\page.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\post.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\tag.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\_partial\\after-footer.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\_partial\\archive-post.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\_partial\\archive.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\_partial\\article.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\_partial\\footer.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\_partial\\head.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\_partial\\header.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\_partial\\left-col.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\_partial\\mobile-nav.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\_partial\\post\\category.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\_partial\\post\\date.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\_partial\\post\\duoshuo.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\_partial\\post\\nav.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\_partial\\post\\share.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\_partial\\post\\tag.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\layout\\_partial\\post\\title.ejs","mtime":1412439913000},{"_id":"themes\\yilia\\source\\img\\coderwall.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\img\\delicious.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\img\\facebook.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\img\\github.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\img\\google.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\img\\img-err.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\img\\img-loading.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\img\\linkedin.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\img\\pinboard.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\img\\pinterest.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\img\\rss.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\img\\twitter.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\img\\stackoverflow.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\img\\weibo.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\js\\instagram.js","mtime":1412439913000},{"_id":"themes\\yilia\\source\\js\\jquery.lazyload.js","mtime":1412439913000},{"_id":"themes\\yilia\\source\\js\\main.js","mtime":1412439913000},{"_id":"themes\\yilia\\source\\js\\script.js","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\_extend.styl","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\_variables.styl","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\style.styl","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\_partial\\archive.styl","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\_partial\\article.styl","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\_partial\\footer.styl","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\_partial\\header.styl","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\_partial\\highlight.styl","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\_partial\\instagram.styl","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\_partial\\main.styl","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\_partial\\mobile.styl","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\_partial\\page.styl","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\_partial\\share.styl","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\_partial\\tagcloud.styl","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\_util\\grid.styl","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\_util\\mixin.styl","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\fonts\\fontawesome-webfont.eot","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\fonts\\fontawesome-webfont.svg","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\fonts\\fontawesome-webfont.svgz","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\fonts\\fontawesome-webfont.ttf","mtime":1412439913000},{"_id":"themes\\yilia\\source\\css\\fonts\\fontawesome-webfont.woff","mtime":1412439913000},{"_id":"themes\\yilia\\source\\fancybox\\blank.gif","mtime":1412439913000},{"_id":"themes\\yilia\\source\\fancybox\\fancybox_loading.gif","mtime":1412439913000},{"_id":"themes\\yilia\\source\\fancybox\\fancybox_loading@2x.gif","mtime":1412439913000},{"_id":"themes\\yilia\\source\\fancybox\\fancybox_overlay.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\fancybox\\fancybox_sprite.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\fancybox\\fancybox_sprite@2x.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\fancybox\\jquery.fancybox.css","mtime":1412439913000},{"_id":"themes\\yilia\\source\\fancybox\\jquery.fancybox.js","mtime":1412439913000},{"_id":"themes\\yilia\\source\\fancybox\\jquery.fancybox.pack.js","mtime":1412439913000},{"_id":"themes\\yilia\\source\\fancybox\\helpers\\fancybox_buttons.png","mtime":1412439913000},{"_id":"themes\\yilia\\source\\fancybox\\helpers\\jquery.fancybox-buttons.css","mtime":1412439913000},{"_id":"themes\\yilia\\source\\fancybox\\helpers\\jquery.fancybox-buttons.js","mtime":1412439913000},{"_id":"themes\\yilia\\source\\fancybox\\helpers\\jquery.fancybox-media.js","mtime":1412439913000},{"_id":"themes\\yilia\\source\\fancybox\\helpers\\jquery.fancybox-thumbs.css","mtime":1412439913000},{"_id":"themes\\yilia\\source\\fancybox\\helpers\\jquery.fancybox-thumbs.js","mtime":1412439913000},{"_id":"source\\_posts\\2014-10-05-tip-sublime-text-ubuntu.md","mtime":1412441229000},{"_id":"source\\_posts\\2014-10-05-tip-linux-common-command.md","mtime":1412441750000}],"Category":[{"name":"Java","_id":"wt9kybbpqreyhoy5","posts":["bdqrh2njjbatboxo","e48dzoigqrln56uw","vleiprfiwbgat8k5","lv1uc1ao1uwt101h","4qjrmy94b5twjcip","wvy08uyj0zos0sr6","8vus73jjyvs227pp"]},{"name":"Git","_id":"lo4tgn85xn5ui33g","posts":[]},{"name":"Sublime-Text","_id":"m6xbb3ufymigsnj3","posts":[]},{"name":"tips","_id":"xrv0z3cjw56biiw2","posts":["tfu48og91ucu1gt8","bqdj8s0wpjimjzeh","4mq4j3hw296e4e4y"]},{"name":"Tips","_id":"txl7b7h1l7bmctyr","posts":[]}],"Page":[],"Post":[{"layout":"post","title":"HashMap,HashTable区别","categories":["wt9kybbpqreyhoy5"],"tags":["2nx3ckst9fc99b9q"],"content":"<h2 id=\"HashMap,HashTable区别\">HashMap,HashTable区别</h2>\n<h3 id=\"HashTable\">HashTable</h3>\n<p>特点：线程同步 </p>\n<h3 id=\"HashMap\">HashMap</h3>\n<p>特定：</p>\n<ul>\n<li>线程不同步，但可以通过 <code>Collections.synchronizedMap(HashMap map)</code> 实现线程同步。</li>\n<li>允许Key，value值为空。</li>\n<li>优于HashTable的Hash算法，使Hash值更广泛的分布到数组的不同位置。</li>\n<li>更优的效率</li>\n</ul>\n<p>实际应用中，我们并不经常需要保证HashMap这些底层代码的同步，交由上层逻辑去控制同步。所以，大多数时候建议使用HashMap</p>\n","source":"_posts/2014-05-19-HashMap-HashTable-diff.md","raw":"---\nlayout: post\ntitle: \"HashMap,HashTable区别\"\ncategories:\n- Java\ntags:\n- Java\n\n---\n\n## HashMap,HashTable区别\n\n### HashTable\n特点：线程同步 \n\n### HashMap\n特定：\n\n* 线程不同步，但可以通过 ``` Collections.synchronizedMap(HashMap map) ``` 实现线程同步。\n* 允许Key，value值为空。\n* 优于HashTable的Hash算法，使Hash值更广泛的分布到数组的不同位置。\n* 更优的效率\n\n实际应用中，我们并不经常需要保证HashMap这些底层代码的同步，交由上层逻辑去控制同步。所以，大多数时候建议使用HashMap\n","slug":"2014-05-19-HashMap-HashTable-diff","date":1412439913000,"updated":1412439913000,"excerpt":"","_id":"bdqrh2njjbatboxo","comments":true,"photos":[],"link":""},{"layout":"post","title":"String，StringBuffer，StringBuilder的区别","categories":["wt9kybbpqreyhoy5"],"tags":["2nx3ckst9fc99b9q"],"content":"<h2 id=\"String，StringBuffer，StringBuilder的区别\">String，StringBuffer，StringBuilder的区别</h2>\n<h3 id=\"String\">String</h3>\n<p>String值是不可变的，每次对String的操作都会生出一个新的String对象。如果频繁改动的话，效率会很低，产生太多的垃圾会触发JVM的垃圾回收，影响系统性能。<br>另外 <code>String s = new String(&quot;abc&quot;)</code> 会生出两个对象, 因为括号里面的”abc”算一。</p>\n<h3 id=\"StringBuffer\">StringBuffer</h3>\n<p>可变长度的字符串缓存区，特定是在append与insert操作的时候，速度会比String快很多。并且在多线程下是安全的。如果大量频繁的字符串操作，考虑使用该类。  </p>\n<h3 id=\"StringBuilder\">StringBuilder</h3>\n<p>5.0后新增的方法，在多线程下不保证同步（即线程不安全），但速度会比StringBuffer快。所以，在单线程的环境下，建议使用StringBuilder。 </p>\n<h3 id=\"总结\">总结</h3>\n<p>一般情况下，对字符串的操作速度 StringBuilder &gt; StringBuffer &gt; String。  </p>\n<ul>\n<li>字符串操作少的情况，使用 String</li>\n<li>单线程，字符串操作多的情况， 使用StringBuilder</li>\n<li>多线程，字符串操作多的情况， 使用StringBuffer</li>\n</ul>\n<h3 id=\"额外的注意\">额外的注意</h3>\n<p><code>String s = a + b</code> 的情况 ，实际上JVM的处理是这样<code>String c = (new StringBuilder(String.valueOf(a))).append(b).toString()</code><br>如此一来每次字符串操作都会生出一个StringBuffer对象。效率多少会有点影响的。</p>\n","source":"_posts/2014-05-19-String-StringBuffer-StringBuilder-diff.md","raw":"---\nlayout: post\ntitle: \"String，StringBuffer，StringBuilder的区别\"\ncategories:\n- Java\ntags:\n- Java\n\n---\n\n## String，StringBuffer，StringBuilder的区别\n\n### String\nString值是不可变的，每次对String的操作都会生出一个新的String对象。如果频繁改动的话，效率会很低，产生太多的垃圾会触发JVM的垃圾回收，影响系统性能。  \n另外 `String s = new String(\"abc\") ` 会生出两个对象, 因为括号里面的\"abc\"算一。\n\n### StringBuffer\n可变长度的字符串缓存区，特定是在append与insert操作的时候，速度会比String快很多。并且在多线程下是安全的。如果大量频繁的字符串操作，考虑使用该类。  \n\n\n### StringBuilder\n5.0后新增的方法，在多线程下不保证同步（即线程不安全），但速度会比StringBuffer快。所以，在单线程的环境下，建议使用StringBuilder。 \n\n### 总结\n一般情况下，对字符串的操作速度 StringBuilder > StringBuffer > String。  \n* 字符串操作少的情况，使用 String\n* 单线程，字符串操作多的情况， 使用StringBuilder\n* 多线程，字符串操作多的情况， 使用StringBuffer\n\n### 额外的注意\n`String s = a + b ` 的情况 ，实际上JVM的处理是这样` String c = (new StringBuilder(String.valueOf(a))).append(b).toString() `  \n如此一来每次字符串操作都会生出一个StringBuffer对象。效率多少会有点影响的。\n","slug":"2014-05-19-String-StringBuffer-StringBuilder-diff","date":1412439913000,"updated":1412439913000,"excerpt":"","_id":"e48dzoigqrln56uw","comments":true,"photos":[],"link":""},{"layout":"post","title":"final, finally, finalize的区别","categories":["wt9kybbpqreyhoy5"],"tags":["2nx3ckst9fc99b9q"],"content":"<h2 id=\"final,_finally,_finalize的区别\">final, finally, finalize的区别</h2>\n<h3 id=\"final\">final</h3>\n<ul>\n<li>如果一个类被声明为final，此类被能被重载。因此final和abstract不能同时修饰一个类</li>\n<li>如果一个方法被声明为final，此方法只能被使用，不能被重载</li>\n<li>如果一个变量被声明为final，此变量只能被使用，不能被修改，并且在声明的时候一定要初始化</li>\n</ul>\n<h3 id=\"finally\">finally</h3>\n<p>异常处理的程序块，使用finally来进行必要的清理工作（如关闭数据库联系，文件流之类的）。<br>值得一提的是  </p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">testFinally1</span>() {</div><div class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> {</div><div class=\"line\">        i++;</div><div class=\"line\">        <span class=\"keyword\">return</span> i++;</div><div class=\"line\">    } <span class=\"keyword\">finally</span> {</div><div class=\"line\">        System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"In finally\"</span>);</div><div class=\"line\">        i++;</div><div class=\"line\">    }</div><div class=\"line\">}</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">testFinally2</span>() {</div><div class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">try</span> {</div><div class=\"line\">        i++;</div><div class=\"line\">        <span class=\"keyword\">return</span> i++;</div><div class=\"line\">    } <span class=\"keyword\">finally</span> {</div><div class=\"line\">        System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"In finally\"</span>);</div><div class=\"line\">        i++;</div><div class=\"line\">    }</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n\n<p>testFinally1()返回的值是1，testFinally2()返回的值是2。 也就是说，finally会在return后执行。并且，return后，变量的改变并不会对返回值照成影响</p>\n<h3 id=\"finalize\">finalize</h3>\n<p>类似于C++的析构函数，但实际上有很大区别，垃圾回收器准备释放对象占用的存储空间的时候，就会调用finalize()方法，做一些清理工作。但是必须等到下一次垃圾回收回收动作才会回收内存。<br>所以，并不是finalize调用后内存就会被回收。因为垃圾回收是需要系统开销的。不到内存濒临用光或者程序退出的时候，垃圾回收动作很可能不会发送。<br>另外，，执行finalize的线程优先级一般比较低，所以即使垃圾回收器工作，finalize也不一定得到及时的执行<br>finalize使用场景：</p>\n<ul>\n<li>调用本地方法（如C，C++），其申请的内存是不会被垃圾回收器回收的。finalize可用来回收这部分内存。</li>\n<li>用于发现如文件是否被关闭，连接是否被关闭这种情景。</li>\n</ul>\n","source":"_posts/2014-05-19-final-finally-finalize-diff.md","raw":"---\nlayout: post\ntitle: \"final, finally, finalize的区别\"\ncategories:\n- Java\ntags:\n- Java\n\n---\n\n## final, finally, finalize的区别\n### final\n* 如果一个类被声明为final，此类被能被重载。因此final和abstract不能同时修饰一个类\n* 如果一个方法被声明为final，此方法只能被使用，不能被重载\n* 如果一个变量被声明为final，此变量只能被使用，不能被修改，并且在声明的时候一定要初始化\n\n### finally\n异常处理的程序块，使用finally来进行必要的清理工作（如关闭数据库联系，文件流之类的）。  \n值得一提的是  \n\n```\npublic int testFinally1() {\n    int i = 0;\n    try {\n        i++;\n        return i++;\n    } finally {\n        System.out.println(\"In finally\");\n        i++;\n    }\n}\npublic int testFinally2() {\n    int i = 0;\n    try {\n        i++;\n        return i++;\n    } finally {\n        System.out.println(\"In finally\");\n        i++;\n    }\n}\n```\ntestFinally1()返回的值是1，testFinally2()返回的值是2。 也就是说，finally会在return后执行。并且，return后，变量的改变并不会对返回值照成影响\n\n### finalize\n类似于C++的析构函数，但实际上有很大区别，垃圾回收器准备释放对象占用的存储空间的时候，就会调用finalize()方法，做一些清理工作。但是必须等到下一次垃圾回收回收动作才会回收内存。  \n所以，并不是finalize调用后内存就会被回收。因为垃圾回收是需要系统开销的。不到内存濒临用光或者程序退出的时候，垃圾回收动作很可能不会发送。  \n另外，，执行finalize的线程优先级一般比较低，所以即使垃圾回收器工作，finalize也不一定得到及时的执行  \nfinalize使用场景：\n  \n* 调用本地方法（如C，C++），其申请的内存是不会被垃圾回收器回收的。finalize可用来回收这部分内存。\n* 用于发现如文件是否被关闭，连接是否被关闭这种情景。","slug":"2014-05-19-final-finally-finalize-diff","date":1412439913000,"updated":1412439913000,"excerpt":"","_id":"vleiprfiwbgat8k5","comments":true,"photos":[],"link":""},{"layout":"post","title":"finally引起的异常丢失问题","categories":["wt9kybbpqreyhoy5"],"tags":["2nx3ckst9fc99b9q"],"content":"<h2 id=\"finally引起的异常丢失问题\">finally引起的异常丢失问题</h2>\n<h3 id=\"场景一\">场景一</h3>\n<figure class=\"highlight Java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loseException</span>() <span class=\"keyword\">throws</span> Exception {</div><div class=\"line\">\t<span class=\"keyword\">try</span> {</div><div class=\"line\">\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">\"Exception A\"</span>);</div><div class=\"line\">\t} <span class=\"keyword\">finally</span> {</div><div class=\"line\">\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">\"Exception B\"</span>);</div><div class=\"line\">\t}</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n\n<p>调用 </p>\n<figure class=\"highlight loseException()\"><figcaption><span>``` 你会发现，Exception A 被 Exception B覆盖掉了。这是非常严重的设计缺陷，并且很难察觉这些错误。</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">目前Java还未修正这个错误。 其解决办法是将所有抛出异常的方法都打包同一个<span class=\"keyword\">try</span>-<span class=\"keyword\">catch</span>中。  </div><div class=\"line\"></div><div class=\"line\"><span class=\"preprocessor\">### 场景二</span></div></pre></td></tr></table></figure>\n\n<p>Java</p>\n<pre><code><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">loseException2</span>() <span class=\"keyword\">throws</span> Exception {\n    <span class=\"keyword\">try</span> {\n        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(<span class=\"string\">\"Exception A\"</span>);\n    } <span class=\"keyword\">finally</span> {\n        <span class=\"keyword\">return</span>;\n    }\n}\n</code></pre><p>```</p>\n<p>这种方法让你更简单粗暴的丢失异常，并且不会产生任何输出。</p>\n","source":"_posts/2014-05-19-finally-lose.md","raw":"---\nlayout: post\ntitle: \"finally引起的异常丢失问题\"\ncategories:\n- Java\ntags:\n- Java\n\n---\n\n## finally引起的异常丢失问题\n\n### 场景一\n\n```Java\n\n\tpublic void loseException() throws Exception {\n\t\ttry {\n\t\t\tthrow new Exception(\"Exception A\");\n\t\t} finally {\n\t\t\tthrow new Exception(\"Exception B\");\n\t\t}\n\t}\n\n```\n\n调用 ``` loseException() ``` 你会发现，Exception A 被 Exception B覆盖掉了。这是非常严重的设计缺陷，并且很难察觉这些错误。\n目前Java还未修正这个错误。 其解决办法是将所有抛出异常的方法都打包同一个try-catch中。  \n\n### 场景二\n\n```Java\n\n\tpublic void loseException2() throws Exception {\n\t\ttry {\n\t\t\tthrow new Exception(\"Exception A\");\n\t\t} finally {\n\t\t\treturn;\n\t\t}\n\t}\n\n```\n\n这种方法让你更简单粗暴的丢失异常，并且不会产生任何输出。","slug":"2014-05-19-finally-lose","date":1412439913000,"updated":1412439913000,"excerpt":"","_id":"lv1uc1ao1uwt101h","comments":true,"photos":[],"link":""},{"layout":"post","title":"基类构造函数，子类构造函数，成员类构造函数的调用顺序","categories":["wt9kybbpqreyhoy5"],"tags":["2nx3ckst9fc99b9q"],"content":"<h3 id=\"基类构造函数，子类构造函数，成员类构造函数的调用顺序\">基类构造函数，子类构造函数，成员类构造函数的调用顺序</h3>\n<p>这是Java 笔试经常遇到的一个问题，所有特定写代码研究下。</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Father</span> </span>{</div><div class=\"line\">    <span class=\"keyword\">public</span> Father() {</div><div class=\"line\">        System.out.println(<span class=\"string\">\"In Father\"</span>);</div><div class=\"line\">    }</div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Children</span> <span class=\"keyword\">extends</span> <span class=\"title\">Father</span> </span>{</div><div class=\"line\">    <span class=\"keyword\">private</span> Friend friend = <span class=\"keyword\">new</span> Friend();</div><div class=\"line\">    <span class=\"keyword\">public</span> Children() {</div><div class=\"line\">        System.out.println(<span class=\"string\">\"In Children\"</span>);</div><div class=\"line\">    }</div><div class=\"line\"></div><div class=\"line\">}</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Friend</span> </span>{</div><div class=\"line\">    <span class=\"keyword\">public</span> Friend() {</div><div class=\"line\">        System.out.println(<span class=\"string\">\"In Friend\"</span>);</div><div class=\"line\">    }</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n\n<p>以上三个对象，运行 <code>new Children();</code> ，执行的结果是</p>\n<pre><code><span class=\"keyword\">In</span> Father\n<span class=\"keyword\">In</span> <span class=\"keyword\">Friend</span>\n<span class=\"keyword\">In</span> Children\n</code></pre><h3 id=\"结论\">结论</h3>\n<p>先执行基类构造函数，再执行成员类构造函数，最后执行子类构造函数。</p>\n","source":"_posts/2014-05-19-java-constructor-base.md","raw":"---\nlayout: post\ntitle: \"基类构造函数，子类构造函数，成员类构造函数的调用顺序\"\ncategories:\n- Java\ntags:\n- Java\n\n---\n\n### 基类构造函数，子类构造函数，成员类构造函数的调用顺序\n\n这是Java 笔试经常遇到的一个问题，所有特定写代码研究下。\n\n\n\n```\n\tclass Father {\n\t    public Father() {\n\t        System.out.println(\"In Father\");\n\t    }\n\t}\n\n\tclass Children extends Father {\n\t    private Friend friend = new Friend();\n\t    public Children() {\n\t        System.out.println(\"In Children\");\n\t    }\n\n\t}\n\n\tclass Friend {\n\t    public Friend() {\n\t        System.out.println(\"In Friend\");\n\t    }\n\t}\n```\n\n\n以上三个对象，运行 ``` new Children(); ``` ，执行的结果是\n\n\tIn Father\n\tIn Friend\n\tIn Children\n\n\n### 结论\n先执行基类构造函数，再执行成员类构造函数，最后执行子类构造函数。","slug":"2014-05-19-java-constructor-base","date":1412439913000,"updated":1412439913000,"excerpt":"","_id":"4qjrmy94b5twjcip","comments":true,"photos":[],"link":""},{"layout":"post","title":"sleep(), wait()的区别","categories":["wt9kybbpqreyhoy5"],"tags":["2nx3ckst9fc99b9q"],"content":"<h2 id=\"sleep(),_wait()的区别\">sleep(), wait()的区别</h2>\n<h3 id=\"sleep(milliseconds)\">sleep(milliseconds)</h3>\n<p>接收一个参数，使当前线程休眠一段时间。用户线程控制。<br>特点：  </p>\n<ul>\n<li>不释放同步锁。</li>\n</ul>\n<h3 id=\"wait()\">wait()</h3>\n<p>调用wait()方法将会将调用者的线程挂起，直到其他线程调用同一个对象的notify()方法后，才会重新激活调用者。<br>特定：  </p>\n<ul>\n<li>释放同步锁</li>\n</ul>\n<h3 id=\"总结\">总结</h3>\n<p>其实两者都可以让线程暂停一段时间,但是本质的区别是一个线程的运行状态控制,一个是线程之间的通讯的问题</p>\n","source":"_posts/2014-05-19-sleep-wait-diff.md","raw":"---\nlayout: post\ntitle: \"sleep(), wait()的区别\"\ncategories:\n- Java\ntags:\n- Java\n\n---\n\n## sleep(), wait()的区别\n\n### sleep(milliseconds)\n接收一个参数，使当前线程休眠一段时间。用户线程控制。\n特点：  \n\n* 不释放同步锁。\n\n\n### wait()\n调用wait()方法将会将调用者的线程挂起，直到其他线程调用同一个对象的notify()方法后，才会重新激活调用者。\n特定：  \n\n* 释放同步锁\n\n### 总结\n其实两者都可以让线程暂停一段时间,但是本质的区别是一个线程的运行状态控制,一个是线程之间的通讯的问题\n\n\n","slug":"2014-05-19-sleep-wait-diff","date":1412439913000,"updated":1412439913000,"excerpt":"","_id":"wvy08uyj0zos0sr6","comments":true,"photos":[],"link":""},{"layout":"post","title":"maven入门","categories":["wt9kybbpqreyhoy5"],"tags":["7b0wue1mbsvr8eai"],"content":"<h2 id=\"下载\">下载</h2>\n<pre><code><span class=\"label\">http:</span>//maven.apache<span class=\"preprocessor\">.org</span>/download.html\n</code></pre><h2 id=\"配置\">配置</h2>\n<pre><code>MAVEN_HOME : D:\\apache-maven-<span class=\"number\">3.0</span><span class=\"number\">.2</span>  \nMAVEN : <span class=\"variable\">%MAVEN_HOME</span><span class=\"variable\">%\\</span>bin   \n(可选） MAVEN_OPTS : -Xms256m -Xmx512m\nPATH: 添加 <span class=\"variable\">%MAVEN</span>%\n</code></pre><h2 id=\"开始\">开始</h2>\n<h3 id=\"验证安装成功\">验证安装成功</h3>\n<pre><code>mvn -<span class=\"keyword\">version</span>\n</code></pre><p>正常应该显示  </p>\n<pre><code>Apache Maven <span class=\"number\">3.2</span><span class=\"number\">.1</span> (ea8b2b07643dbb1b84b6d16e1f08391b666bc1e9;<span class=\"number\">2014</span>-<span class=\"number\">02</span>-<span class=\"number\">15</span>T01:<span class=\"number\">37</span>:<span class=\"number\">52</span>+<span class=\"number\">08</span>:<span class=\"number\">00</span>)\nMaven home: <span class=\"keyword\">D</span>:\\apache-maven-<span class=\"number\">3.2</span><span class=\"number\">.1</span>\\bin\\..\nJava version: <span class=\"number\">1.7</span><span class=\"number\">.0</span>_09, vendor: Oracle Corporation\nJava home: <span class=\"keyword\">C</span>:\\Program Files\\Java\\jdk1<span class=\"number\">.7</span><span class=\"number\">.0</span>_09\\jre\n<span class=\"keyword\">Default</span> locale: zh_CN, platform encoding: GBK\nOS name: <span class=\"string\">\"windows 8\"</span>, version: <span class=\"string\">\"6.2\"</span>, arch: <span class=\"string\">\"amd64\"</span>, family: <span class=\"string\">\"windows\"</span>\n</code></pre><h3 id=\"创建项目\">创建项目</h3>\n<pre><code><span class=\"comment\">#此命令创建一个默认项目</span>\nmvn archetype:create <span class=\"variable\">-DgroupId=</span>com.xiezefan.app <span class=\"variable\">-DartifactId=</span>my-app\n<span class=\"comment\">#此命令创建一个web项目</span>\nmvn archetype:create <span class=\"variable\">-DgroupId=</span>com.xiezefan.app <span class=\"variable\">-DartifactId=</span>webappp <span class=\"variable\">-DarchetypeArtifactId=</span>maven-archetype-webapp\n</code></pre><p>创建一个默认项目，项目名为my-app，项目包结构为com.xiezefan.app  </p>\n<ul>\n<li>DgroupId 项目包结构</li>\n<li>DartifactId 项目名</li>\n<li>DarchetypeArtifactId 项目类型（maven-archetype-webapp是web项目，打包后生成war包）</li>\n</ul>\n<h3 id=\"常用命令\">常用命令</h3>\n<pre><code>mvn <span class=\"keyword\">package</span>  <span class=\"preprocessor\">#打包项目，感觉pox.xml的packaging确定打包成jar or war</span>\n</code></pre>","source":"_posts/2014-05-13-maven-start.md","raw":"---\nlayout: post\ntitle: \"maven入门\"\ncategories:\n- Java\ntags:\n- maven\n\n---\n\n## 下载\n    http://maven.apache.org/download.html\n\n## 配置\n    MAVEN_HOME : D:\\apache-maven-3.0.2  \n    MAVEN : %MAVEN_HOME%\\bin   \n    (可选） MAVEN_OPTS : -Xms256m -Xmx512m\n    PATH: 添加 %MAVEN%\n\n## 开始\n### 验证安装成功\n    mvn -version\n\n正常应该显示  \n\n    Apache Maven 3.2.1 (ea8b2b07643dbb1b84b6d16e1f08391b666bc1e9;2014-02-15T01:37:52+08:00)\n    Maven home: D:\\apache-maven-3.2.1\\bin\\..\n    Java version: 1.7.0_09, vendor: Oracle Corporation\n    Java home: C:\\Program Files\\Java\\jdk1.7.0_09\\jre\n    Default locale: zh_CN, platform encoding: GBK\n    OS name: \"windows 8\", version: \"6.2\", arch: \"amd64\", family: \"windows\"\n\n### 创建项目\n\n    #此命令创建一个默认项目\n    mvn archetype:create -DgroupId=com.xiezefan.app -DartifactId=my-app\n    #此命令创建一个web项目\n    mvn archetype:create -DgroupId=com.xiezefan.app -DartifactId=webappp -DarchetypeArtifactId=maven-archetype-webapp\n\n创建一个默认项目，项目名为my-app，项目包结构为com.xiezefan.app  \n\n* DgroupId 项目包结构\n* DartifactId 项目名\n* DarchetypeArtifactId 项目类型（maven-archetype-webapp是web项目，打包后生成war包）\n\n### 常用命令\n\n    mvn package  #打包项目，感觉pox.xml的packaging确定打包成jar or war","slug":"2014-05-13-maven-start","date":1412439913000,"updated":1412441262000,"excerpt":"","_id":"8vus73jjyvs227pp","comments":true,"photos":[],"link":""},{"layout":"post","title":"Git常用命令集","categories":["xrv0z3cjw56biiw2"],"tags":["w8brf6bk6b9sfngh"],"content":"<p><strong>生成SSH Key</strong></p>\n<blockquote>\n<p>ssh-keygen -t rsa -C “committer_email@committermail.com”  </p>\n</blockquote>\n<p><strong>查看自己拥有的权限</strong></p>\n<blockquote>\n<p>ssh -lgit <git host=\"\"><br>exp: ssh -lgit git.jpushoa.com</git></p>\n</blockquote>\n<p><strong>添加并提交到本地库</strong></p>\n<blockquote>\n<p>git commit -m ‘your comment’</p>\n</blockquote>\n<p><strong>分支</strong></p>\n<blockquote>\n<p>git branch -r    #查看所有分支<br>git branch [branch_name] #创建新分支<br>git checkout [branch_name] #切换到分支<br>git push origin branch_name #上传分支到远程服务器<br>git branch —set-upstream master origin/master #将本地分支链接到远程分支</p>\n</blockquote>\n<p><strong>Tag</strong></p>\n<blockquote>\n<p>git tag #显示标签<br>git tag -a v3.1.1 -m ‘version 3.1.1’    ＃添加标签<br>git push origin v3.1.1 ＃推送到云端<br>git tag -d v3.1.1 # 删除标签<br>git push origin :refs/tags/v3.1.1 # 将删除操作更新到远程git库</p>\n</blockquote>\n","source":"_posts/2014-10-05-tip-git.md","raw":"---\nlayout: post\ntitle: \"Git常用命令集\"\ncategories:\n- tips\ntags:\n- Git\n---\n\n**生成SSH Key**\n> ssh-keygen -t rsa -C \"committer_email@committermail.com\"  \n\n**查看自己拥有的权限**\n> ssh -lgit <git host>\n> exp: ssh -lgit git.jpushoa.com\n\n**添加并提交到本地库**\n> git commit -m 'your comment'\n\n**分支**\n> git branch -r    #查看所有分支\n> git branch [branch_name] #创建新分支\n> git checkout [branch_name] #切换到分支\n> git push origin branch_name #上传分支到远程服务器\n> git branch --set-upstream master origin/master #将本地分支链接到远程分支\n\n**Tag**\n> git tag #显示标签\n> git tag -a v3.1.1 -m 'version 3.1.1'    ＃添加标签\n> git push origin v3.1.1 ＃推送到云端\n> git tag -d v3.1.1 # 删除标签\n> git push origin :refs/tags/v3.1.1 # 将删除操作更新到远程git库\n","slug":"2014-10-05-tip-git","date":1412440038000,"updated":1412441738000,"excerpt":"","_id":"4mq4j3hw296e4e4y","comments":true,"photos":[],"link":""},{"layout":"post","title":"Ubuntu快速安装Sublime-Text","categories":["xrv0z3cjw56biiw2"],"tags":["mhe31wv9u40jys0k"],"content":"<h3 id=\"通过添加PPA安装\">通过添加PPA安装</h3>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo <span class=\"built_in\">add</span>-apt-repository <span class=\"keyword\">pp</span><span class=\"variable\">a:webupd8team</span>/sublime-text-<span class=\"number\">2</span></div><div class=\"line\">sudo apt-<span class=\"built_in\">get</span> <span class=\"keyword\">update</span></div><div class=\"line\">sudo apt-<span class=\"built_in\">get</span> install sublime-text-<span class=\"number\">2</span></div></pre></td></tr></table></figure>\n\n<h3 id=\"安装Soda主题\">安装Soda主题</h3>\n<p>安装 Package Control, 按 <code>Ctrl+~</code>进入控制台，粘贴以下代码</p>\n<blockquote>\n<p>import urllib2,os; pf=’Package Control.sublime-package’; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),’wb’).write(urllib2.urlopen(‘<a href=\"http://sublime.wbond.net/&#39;+pf.replace(\" target=\"_blank\" rel=\"external\">http://sublime.wbond.net/&#39;+pf.replace(</a>‘ ‘,’%20’)).read()); print ‘Please restart Sublime Text to finish installation’</p>\n</blockquote>\n<p>preferences -&gt; package control -&gt; 输入install package<br>在此打开控制台，输入Soda，选择 Theme-Soda<br>Preferences -&gt; Settings – User中修改参数</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">{</div><div class=\"line\">    \"<span class=\"attribute\">ignored_packages</span>\":</div><div class=\"line\">    <span class=\"value\">[</span></div><div class=\"line\">        <span class=\"string\">\"Vintage\"</span></div><div class=\"line\">    ],</div><div class=\"line\">    \"<span class=\"attribute\">theme</span>\": <span class=\"value\"><span class=\"string\">\"Soda Dark.sublime-theme\"</span></span>,</div><div class=\"line\">    \"<span class=\"attribute\">font_size</span>\": <span class=\"value\"><span class=\"number\">12</span></span>,</div><div class=\"line\">    \"<span class=\"attribute\">font_face</span>\": <span class=\"value\"><span class=\"string\">\"YaHei Consolas Hybrid\"</span></span></div><div class=\"line\">}</div></pre></td></tr></table></figure>\n\n<p>重启Sublime Text</p>\n","source":"_posts/2014-10-05-tip-sublime-text-ubuntu.md","raw":"---\nlayout: post\ntitle: \"Ubuntu快速安装Sublime-Text\"\ncategories:\n- tips\ntags:\n- Sublime-Text\n---\n\n### 通过添加PPA安装\n```\nsudo add-apt-repository ppa:webupd8team/sublime-text-2\nsudo apt-get update\nsudo apt-get install sublime-text-2\n```\n\n### 安装Soda主题\n安装 Package Control, 按 `Ctrl+~`进入控制台，粘贴以下代码\n> import urllib2,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print 'Please restart Sublime Text to finish installation'\n\npreferences -> package control -> 输入install package\n在此打开控制台，输入Soda，选择 Theme-Soda\nPreferences -> Settings – User中修改参数\n```\n{\n    \"ignored_packages\":\n    [\n        \"Vintage\"\n    ],\n    \"theme\": \"Soda Dark.sublime-theme\",\n    \"font_size\": 12,\n    \"font_face\": \"YaHei Consolas Hybrid\"\n}\n```\n重启Sublime Text\n\n\n","slug":"2014-10-05-tip-sublime-text-ubuntu","date":1412440809000,"updated":1412441229000,"excerpt":"","_id":"bqdj8s0wpjimjzeh","comments":true,"photos":[],"link":""},{"layout":"post","title":"Linux常用命令","categories":["xrv0z3cjw56biiw2"],"tags":["xag6auql0o5j170x"],"content":"<p><strong>安装右键从终端启动</strong></p>\n<blockquote>\n<p>sudo apt-get install nautilus-open-terminal</p>\n</blockquote>\n<p><strong>复制文件到远程目录</strong></p>\n<blockquote>\n<p>scp filename  xiezf@192.168.248.124:/home/push</p>\n</blockquote>\n<p><strong>如果是复制文件夹，使用</strong></p>\n<blockquote>\n<p>scp -r filename  xiezf@192.168.248.124:/home/push</p>\n</blockquote>\n<p><strong>清理dns cache</strong></p>\n<blockquote>\n<p>sudo /etc/init.d/dns-clean start </p>\n</blockquote>\n<p><strong>查看域名解析</strong></p>\n<blockquote>\n<p>nslookup  api.jpush.cn</p>\n</blockquote>\n","source":"_posts/2014-10-05-tip-linux-common-command.md","raw":"---\nlayout: post\ntitle: \"Linux常用命令\"\ncategories:\n- tips\ntags:\n- Linux \n---\n\n**安装右键从终端启动**\n> sudo apt-get install nautilus-open-terminal\n\n**复制文件到远程目录**\n> scp filename  xiezf@192.168.248.124:/home/push\n\n\n**如果是复制文件夹，使用**\n> scp -r filename  xiezf@192.168.248.124:/home/push\n\n**清理dns cache**\n> sudo /etc/init.d/dns-clean start \n\n**查看域名解析**\n> nslookup  api.jpush.cn","slug":"2014-10-05-tip-linux-common-command","date":1412441548000,"updated":1412441750000,"excerpt":"","_id":"tfu48og91ucu1gt8","comments":true,"photos":[],"link":""}],"Tag":[{"name":"Java","_id":"2nx3ckst9fc99b9q","posts":["bdqrh2njjbatboxo","e48dzoigqrln56uw","vleiprfiwbgat8k5","lv1uc1ao1uwt101h","4qjrmy94b5twjcip","wvy08uyj0zos0sr6"]},{"name":"maven","_id":"7b0wue1mbsvr8eai","posts":["8vus73jjyvs227pp"]},{"name":"Tips","_id":"8p9ybujowcbk0wj0","posts":[]},{"name":"tips","_id":"glbc1peloiobxrps","posts":[]},{"name":"Tips Sublime-Text","_id":"ftj40ljmoegoy3ef","posts":[]},{"name":"Linux","_id":"xag6auql0o5j170x","posts":["tfu48og91ucu1gt8"]},{"name":"Git","_id":"w8brf6bk6b9sfngh","posts":["4mq4j3hw296e4e4y"]},{"name":"Sublime-Text","_id":"mhe31wv9u40jys0k","posts":["bqdj8s0wpjimjzeh"]}]}